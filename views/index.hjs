<!DOCTYPE html>
<html>
  <head>
    <title>{{ title }}</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <script src="/js/three/three.min.js"></script>
    <script src="/js/dat.gui.min.js"></script>
    <script src="/js/OrbitControls.js"></script>
    <script src="/js/Projector.js"></script>
    <script src="/js/stats.min.js"></script>
    <script src="/js/jquery-2.1.4.min.js"></script>
    <script src="/js/helvetiker_regular.typeface.js"></script>
  </head>
  <body>
    <div id="webglcontainer"></div>
    <span id="interface">
      <button id="cylinder">Create Cylinder</button>
    </div>
    <script>
    $(function(){

        var scene, camera, renderer;
        // var controls, guiControls, datGUI;
        var axis, color;
        var planeGeometry;
        var planeMaterial;
        var plane;
        var spotLight;
        var stats;
        var SCREEN_WIDTH, SCREEN_HEIGHT;
        var projector;
        var mouse = { x: 0, y: 0 , clicked: false};
        var container = document.getElementById("webglcontainer");

        function init(){
            /*creates empty scene object and renderer*/
            scene = new THREE.Scene();
            camera =  new THREE.PerspectiveCamera(45, window.innerWidth/window.innerHeight, .1, 500);
            renderer = new THREE.WebGLRenderer({antialias:true});

            renderer.setClearColor(0xdddddd);
            renderer.setSize(window.innerWidth, window.innerHeight);
            renderer.shadowMapEnabled= true;
            renderer.shadowMapSoft = true;

            //Add stats
            stats = new Stats();
            stats.domElement.style.position = "absolute";
            stats.domElement.style.right = "0px";
            stats.domElement.style.top = "0px";

            container.appendChild(stats.domElement);

            projector = new THREE.Projector();

            /*add controls*/
            controls = new THREE.OrbitControls( camera, renderer.domElement );
            controls.addEventListener( 'change', render );

            /*adds helpers*/
            axis =  new THREE.AxisHelper(10);
            scene.add (axis);

            /*create plane*/
            planeGeometry = new THREE.PlaneGeometry (100,100,100);
            planeMaterial = new THREE.MeshLambertMaterial({color:0xffffff});
            plane = new THREE.Mesh(planeGeometry, planeMaterial);

            /*position and add objects to scene*/
            plane.rotation.x = -.5*Math.PI;
            plane.receiveShadow = true;
            scene.add(plane);

            camera.position.x = 40;
            camera.position.y = 40;
            camera.position.z = 40;
            camera.lookAt(scene.position);

            /*adds spot light with starting parameters*/
            spotLight = new THREE.SpotLight(0xffffff);
            spotLight.castShadow = true;
            spotLight.position.set (20, 35, 40);
            spotLight.intensity = 1;
            spotLight.distance = 0;
            spotLight.angle = 1.570;
            spotLight.exponent = 0;
            spotLight.shadowCameraNear = 10;
            spotLight.shadowCameraFar = 100;
            spotLight.shadowCameraFov = 50;
            spotLight.shadowCameraVisible = false;
            spotLight.shadowBias = 0;
            spotLight.shadowDarkness = 0.5;
            scene.add(spotLight);

            $("#webglcontainer").append(renderer.domElement);
            /*stats*/
            stats = new Stats();
            stats.domElement.style.position = 'absolute';
            stats.domElement.style.left = '0px';
            stats.domElement.style.top = '0px';
            $("#webGL-container").append( stats.domElement );

        }

        function render() {

        }

        function animate(){
            requestAnimationFrame(animate);
            render();
            stats.update();
            renderer.render(scene, camera);
        }

        $(window).resize(function(){


            SCREEN_WIDTH = window.innerWidth;
            SCREEN_HEIGHT = window.innerHeight;

            camera.aspect = SCREEN_WIDTH / SCREEN_HEIGHT;
            camera.updateProjectionMatrix();

            renderer.setSize( SCREEN_WIDTH, SCREEN_HEIGHT );



        });
        init();
        animate();

        $("#cylinder").click(function(){
          var geometry = new THREE.CylinderGeometry(2, 2, 5, 8);
          var material = new THREE.MeshLambertMaterial( {color: 0xffff00} );
          var cylinder = new THREE.Mesh( geometry, material );
          scene.add( cylinder );
          cylinder.position.x = 0;
          cylinder.position.y = 2;
          cylinder.position.z = 0;

          // cylinder.rotation.x = 180;
          cylinder.rotateZ(Math.PI/2);
        });

    });
    </script>
  </body>
</html>
